import random
import asyncio
import time

from config import Config
from loguru import logger

from pyrogram import Client
from pyrogram.types import Message
from pyrogram.enums import ChatAction

# –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏
logger.add(
    'bot/data/debug.log',
    format="{time:DD-MMM-YYYY HH:mm:ss.SSS} | {level} | {name}:{function}:{line} - {message}",
    level="DEBUG",
    rotation='10 MB'
)

# –í—ã—Ö–æ–¥ userbot`–∞ –∏–∑ —á–∞—Ç–æ–≤
async def exiting_the_chat(userbot: Client, message: Message):
    start_time = time.time()
    channels_for_exit = message.command[1:]

    for channel in channels_for_exit:
        await asyncio.sleep(random.uniform(15, 60))
        await userbot.leave_chat(channel)
        await userbot.leave_chat(channel)
        logger.info(f"[{userbot.name}] –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç @{channel}")

    await message.react(emoji='üëç')
    elapsed_time = round(time.time() - start_time, 2)
    logger.info(f"{userbot.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª –æ—Ç–ø–∏—Å–∫—É –∑–∞ {elapsed_time} —Å–µ–∫—É–Ω–¥!")


# –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ userbot`–∞ –≤ —á–∞—Ç—ã
async def joining_the_chat(userbot: Client, message: Message):
    start_time = time.time()
    channels_for_join = message.command[1:]

    for channel in channels_for_join:
        await asyncio.sleep(random.uniform(15, 60))
        await userbot.join_chat(channel)
        await userbot.join_chat(channel)
        logger.info(f"[{userbot.name}] –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ @{channel}")
    await userbot.archive_chats(channels_for_join)

    await message.react(emoji='üëç')
    elapsed_time = round(time.time() - start_time, 2)  # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    logger.info(f"[{userbot.name}] —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ {elapsed_time} —Å–µ–∫—É–Ω–¥!")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≥–∏—Ñ—Ç –∫–æ–¥–æ–≤ userbot`–∞
async def chat_and_gift_handler(userbot: Client, message: Message):
    if message.giveaway is not None:
        await userbot.send_message(
            chat_id=Config.chat_id,
            message_thread_id=Config.message_thread_id,
            text=f'–Ø –≤—ã–∏–≥—Ä–∞–ª –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ {message.giveaway.months} –º–µ—Å—è—Ü–∞(–µ–≤)!'
        )
    elif message.from_user.id == 777000:
        await userbot.send_message(
            chat_id=Config.chat_id,
            message_thread_id=Config.message_thread_id,
            text=f'–ú–Ω–µ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram!'
        )
    else:
        await userbot.send_message(
            chat_id=Config.chat_id,
            message_thread_id=Config.message_thread_id,
            text=f'–ú–Ω–µ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username}\n'
                 f'–ï–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:\n'
                 f'{message.text}'
        )


# –°–∏–º—É–ª—è—Ü–∏—è userbot`–æ–º –¥–µ–π—Å—Ç–≤–∏—è —Ä—è–¥–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def simulate_user_activity(userbot: Client, message: Message):
    start_time = time.time()
    lust_message_ids = []

    logger.info(f"[{userbot.name}] –Ω–∞—á–∞–ª –ø—Ä–æ–≥—Ä–µ–≤")

    # –ü–æ–ª—É—á–∞–µ–º 3 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è
    async for lust_msg in userbot.get_chat_history(Config.chat_id, limit=4):
        lust_message_ids.append(lust_msg.id)
    lust_message_ids = lust_message_ids[1:]

    # –ü—Ä–æ–≥—Ä–µ–≤ —á–µ—Ä–µ–∑ —Ä–µ–∞–∫—Ü–∏–∏
    for message_id in lust_message_ids:
        await asyncio.sleep(delay=random.randint(15, 35))
        await userbot.send_reaction(chat_id=Config.chat_id,
                                   message_id=message_id,
                                   emoji=random.choice(
                                       ["‚ù§Ô∏è", "üî•", "üòÅ", "üòç", "ü•∞", "üëç", "üéâ", "ü§ó", "‚ö°Ô∏è"]
                                   ))

    # –ü—Ä–æ–≥—Ä–µ–≤ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ—Å—Å—ã–ª–∫—É —Å–º—Å
    await asyncio.sleep(delay=random.randint(5, 15))
    await userbot.forward_messages(
        chat_id='me',
        from_chat_id=Config.chat_id,
        message_ids=random.choice(lust_message_ids)
    )

    # –ü—Ä–æ–≥—Ä–µ–≤ —á–µ—Ä–µ–∑ —á–∞—Ç
    from main import progrev_phrases  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑

    await userbot.send_chat_action(Config.chat_id, ChatAction.TYPING) # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—á–∞—Ç–∞–µ—Ç...
    await asyncio.sleep(delay=random.randint(15, 35))
    await message.reply(random.choice(progrev_phrases).strip()) # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ—Ä–∞–∑—ã
    await asyncio.sleep(delay=random.randint(15, 35))

    # –ö–æ–Ω–µ—Ü –ø—Ä–æ–≥—Ä–µ–≤–∞
    await message.react(emoji='üëç')
    elapsed_time = round(time.time() - start_time, 2)  # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    logger.info(f"[{userbot.name}] —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª –ø—Ä–æ–≥—Ä–µ–≤ –∑–∞ {elapsed_time} —Å–µ–∫—É–Ω–¥!")
